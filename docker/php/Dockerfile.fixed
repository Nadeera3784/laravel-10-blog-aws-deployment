FROM php:8.1-fpm-alpine as php-base

# Install system dependencies
RUN apk add --update --no-cache \
        bash \
        curl \
        shadow \
        nginx \
        supervisor

# Install PHP extensions dependencies
RUN apk add --update --no-cache \
        freetype \
        libjpeg-turbo \
        libpng \
        libzip \
        zip

# Install build dependencies including autoconf for Redis
RUN apk add --update --no-cache --virtual .docker-php-global-dependancies \
        freetype-dev \
        libjpeg-turbo-dev \
        libpng-dev \
        libzip-dev \
        zip \
        autoconf \
        gcc \
        g++ \
        make \
        curl-dev \
        libmcrypt-dev \
        mysql-dev

# Configure and install PHP extensions
RUN php -m && \
    docker-php-ext-configure bcmath --enable-bcmath && \
    docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-configure zip && \
    docker-php-ext-install \
        bcmath \
        gd \
        zip \
        pdo_mysql \
        mysqli \
        curl

# Install Redis
RUN pecl install redis && \
        docker-php-ext-enable redis && \
        php -m

# Install Composer
RUN php -r "readfile('https://getcomposer.org/installer');" | \
    php -- --install-dir=/usr/local/bin --filename=composer

# Clean up
RUN apk del .docker-php-global-dependancies && \
    rm -rf /var/cache/apk/* && \
    docker-php-source delete

FROM php-base as php-production

# Copy application files
COPY ./ /var/www/
COPY ./docker/php/custom.ini /usr/local/etc/php/conf.d/custom.ini
COPY ./docker/php/startup-fix.sh /usr/local/bin/startup-fix.sh
COPY ./docker/nginx/nginx.prod.conf /etc/nginx/http.d/default.conf
COPY ./docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Set working directory
WORKDIR /var/www

# Install PHP dependencies
RUN composer install --no-dev --optimize-autoloader

# Publish vendor assets
RUN php artisan vendor:publish --tag=public

# Set ownership
RUN chown -R root:root /var/www

# Clean up
RUN rm -Rf /var/www/docker /root/.composer/

# Create www-data user and set permissions
RUN usermod -u 1000 www-data && groupmod -g 1000 www-data \
    && mkdir -p /var/www/storage/logs \
    && mkdir -p /var/www/storage/framework/cache \
    && mkdir -p /var/www/storage/framework/views \
    && mkdir -p /var/www/storage/framework/sessions \
    && mkdir -p /var/www/bootstrap/cache

# Set proper permissions for Laravel
RUN mkdir -p /var/www/storage/framework/sessions && \
    mkdir -p /var/www/storage/framework/views && \
    mkdir -p /var/www/storage/framework/cache && \
    mkdir -p /var/www/storage/logs && \
    chown -R www-data:www-data /var/www/storage && \
    chown -R www-data:www-data /var/www/bootstrap/cache && \
    chmod -R 775 /var/www/storage && \
    chmod -R 775 /var/www/bootstrap/cache

# Set up nginx logs
RUN mkdir -p /var/log/nginx && \
    chown -R www-data:www-data /var/log/nginx && \
    chmod -R 755 /var/log/nginx

# Make startup script executable
RUN chmod +x /usr/local/bin/startup-fix.sh

# Expose port
EXPOSE 80

# Use the comprehensive startup script
CMD ["/usr/local/bin/startup-fix.sh"] 